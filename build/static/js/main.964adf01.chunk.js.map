{"version":3,"sources":["login.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","prop","classes","React","useState","amount","password","showPassword","values","setValues","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","value","onChange","event","target","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","preventDefault","edge","FormControlLabel","control","Checkbox","color","Button","Link","href","Grid","container","item","xs","App","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","style","document","getElementById"],"mappings":"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","file":"static/js/main.964adf01.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/Mail';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(11),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(12),\n  },\n  submit: {\n    margin: theme.spacing(10, 0, 10),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    showPassword: false,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type={values.showPassword ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange('password')}\n            id=\"password\"\n            autoComplete=\"current-password\"\n            endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n            }\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            <Link color=\"inherit\" href=\"https://www.google.com.tw/?client=safari&channel=iphone_bm\">\n              Sign In\n            </Link>\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"https://accounts.google.com/signin/v2/usernamerecovery?service=mail&passive=true&rm=false&continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&ss=1&scc=1&ltmpl=default&ltmplcache=2&emr=1&osid=1&flowName=GlifWebSignIn&flowEntry=ServiceLogin\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"https://accounts.google.com/signup/v2/webcreateaccount?service=mail&continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&ltmpl=default&gmb=exp&biz=false&flowName=GlifWebSignIn&flowEntry=SignUp\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","import './App.css';\nimport Login from './login'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div>\n          {Login()}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div style={{ backgroundColor:  '#FAF0E6'}}>\n      <App />  \n    </div>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}